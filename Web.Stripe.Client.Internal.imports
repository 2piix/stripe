import Control.Applicative ( Applicative((<*>)), (<$>) )
import Control.Monad.IO.Class ()
import Control.Monad.Reader
    ( MonadIO(liftIO), MonadReader(ask), ReaderT(runReaderT) )
import Data.Aeson
    ( Value(Object), FromJSON(..), (.:), decodeStrict )
import Data.ByteString ( ByteString )
import Data.Monoid ( (<>) )
import Data.Text ( Text )
import Network.Http.Client
    ( Method(..),
      baselineContextSSL,
      sendRequest,
      receiveResponse,
      openConnectionSSL,
      inputStreamBody,
      setHeader,
      setContentType,
      setAuthorizationBasic,
      http,
      buildRequest,
      getStatusCode )
import OpenSSL ( withOpenSSL )
import Web.Stripe.Internal.StripeError
    ( StripeError(errorHTTP),
      StripeErrorHTTPCode(BadRequest, NotFound, RequestFailed,
                          StripeServerError, UnAuthorized, UnknownHTTPCode) )
import Web.Stripe.Util ( paramsToByteString )
import qualified Data.ByteString as S ( ByteString )
import qualified Data.ByteString.Lazy as BL ()
import qualified Data.ByteString.Lazy.Char8 as BL8 ()
import qualified Data.Text as T ()
import qualified Data.Text.Encoding as T ( encodeUtf8 )
import qualified System.IO.Streams as Streams
    ( read, fromByteString )
